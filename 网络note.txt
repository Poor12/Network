1.计算机网络分类：
	（1）按通信协议类型分类：分组交换网络、以太网协议局域网
	（2）按管理模式分类：对等网和C/S网络
	（3）按不同传输介质分类
	（4）按传输方式分类：点对点和广播
	（5）按所覆盖的地理范围
2.网络拓扑结构是由网络节点设备和通信介质通过物理连接所构成的逻辑结构图
	（1）节点（网络端口）
		1.转节点，如交换机、网关、路由器
		2.访问节点
	（2）结点（一台网络设备，连接了多个节点）
		1.链路节点，交换机
		2.路由节点，路由器
	（3）链路（两个节点间的线路）
		1.物理
		2.逻辑
	（4）通路：一系列穿越通信网络而建立起来的节点到节点的链路串连，一条通路包含多条链路
3.常用拓扑：
	（1）星型：所有网络设备集中连接在同一台交换机上
	（2）多级星型：多个交换机级联
	星型优缺点：优点：1.节点扩展、移动方便 2.网络传输数据快 3.维护容易 缺点：1.交换机工作负荷大 2.网络布线复杂 3.广播传输影响网络性能
	（3）环形：令牌环网
	（4）总线型
	（5）树形：交换机之间通过总线方式级联，交换机与网络设备之间采用星型，缺点：根节点负荷大
	（6）网状
	（7）混合型
无线局域网拓扑：
	（1）Ad-Hoc：点对点，连接性能差，连接用户少
	（2）Infrastructure
4.计算机网络体系结构：
osi/rm七层：
	（1）物理
	（2）数据链路
	（3）网络
	（4）传输
	（5）会话
	（6）表示
	（7）应用
tcp/ip四层：
	（1）网络访问
	（2）网际互连
	（3）传输
	（4）应用
tcp/ip五层：
	（1）物理
	（2）数据链路
	（3）网络
	（4）传输
	（5）应用
局域网体系结构：
	（1）物理
	（2）数据链路
通信原理：
	（1）数据通信原理
	（2）对等通信原理
5.SAP（服务访问点）：邻层实体间实现相互通信的逻辑接口，位于两层边界处
6.数据链路：（向网络层提供透明、可靠的数据传输服务）
	（1）MAC子层
	（2）LLC子层：链路管理（有确认的面向连接）、封装成帧（MTU）、透明传输、差错控制（奇偶校验，循环冗余码，ARQ（自动重发））
7.数据链路服务：
	（1）有确认的面向连接的服务
	（2）有确认的无连接服务
	（3）无确认的无连接服务
有无连接：进行数据传输前是否需要建立专门的数据链路
有无确认：是否需要确认
8.流量控制：
	（1）基于反馈：发送端发送一帧数据后必须等待接收端返回确认消息，然后发送下一数据帧。接受端通过检查帧的校验序列，无错就发送确认，否则不发送消息，要求重发。引入计时器避免无休止的等待。
	（2）基于速率：基于窗口滑动机制的速率控制方案
具体方案：
	（1）XON/XOFF方法：当接收端认为不能继续接受数据时会发送一个XOFF控制字符，发送端收到字符就停止发送；当接受端可以继续接受数据时，接收端会发送一个XON控制字符，发送端收到后恢复发送
	（2）滑动窗口机制：滑动窗口机制中的窗口是指发送端和接收端的缓存空间大小，滑动指缓存空间中存放的未处理帧数是变化的，发送端在收到确认帧后会删除原来保存在缓存中的待重发帧，接受端向网络帧提交一个帧后也会删除原来保存在缓存中的帧
9.差错纠正：
	（1）自动重发：
		1.连续重发：1.回退N帧 2.选择重传
		2.空闲重发
	（2）海明纠错码
10.数据链路层主要协议：
	（1）面向字符的BSC协议
	（2）面向比特的SDLC和HDLC协议
	（3）面向字符的PPP同步传输协议
11.数据链路层主要网络设备：
	（1）计算机网卡：1.有线以太网卡 2.wlan网卡
	（2）网桥：可连接不同物理网段（ip地址属于同一网络地址段，位于不同地理位置的不同LAN段）的二层网络设备
	（3）二层交换机：交换机是带有交换功能的集线器或者说交换机是多端口的网桥
		交换器较网桥的优势：1.具有多个交换端口 2.数据转发率更高 3.更强的mac学习功能
		交换机工作原理：CAM映射表，泛洪，截取目的mac地址的主机发送的数据帧，获取映射关系后发送
12.MAC子层：
	1.寻找目的节点
	2.解决网络中多个用户争抢共享物理介质或者共享信道的现象（广播信道，一台主机发送的信号可以同时被多个节点接受）
13.MAC帧：
	1.单播帧
	2.多播帧
	3.广播帧（全1）
14.介质争用的产生原因：冲突域--集线器和交换机的端口
15.CSMA：先侦听再访问，侦听间隔采用退避算法
	1.非-坚持 退避间隔随机生成
	2.1-坚持 发现总线介质忙时一直持续不间断侦听，直到发现介质处于闲状态，立即发送数据
	3.P-坚持 发现总线介质忙时一直持续不间断侦听，直到发现介质处于闲状态，但根据概率P选择发送数据，在1-P时不发送数据，延迟一个t时间要来侦听介质状态
16.CSMA/CD：
	1.当一个站点想要发送数据的时候，它首先要检测总线介质上是否有其他站点正在传输
	2.如果信道忙，继续侦听，直到侦听到空闲；如果侦听到空闲，就立刻准备好发送的数据
	3.发送数据的同时，站点继续侦听，确定没有其他站点在传输数据才传输数据
	4.如果检测到冲突，立即停止发送，同时发送一个用于加强冲突的JAM信号，以便网络上的所有站点直到发生冲突。本站点再等待一段随机时间重新发送数据
	5.冲突检测原理--JAM信号
	6.冲突避让原理--截断二进制指数退避算法
17.网络层：
	1.主要设备：路由器
	2.主要功能：连接不同网络
	3.主要作用：1.屏蔽网络差异，提供透明传输 2.为网络间通信提供路由选择 3.数据包封装和解封装 4.拥塞控制
18.网络层数据交换技术：
	1.线路交换
	2.存储-转发：网络节点运用程序先将途经的数据流按传输单元接受并存储下来，一个数据单元接受完后根据相关的路由算法选择一条合适的路径将数据转发出去
	根据传输的数据单元是报文还是报文分组可分为：
		1.报文交换：信息以报文为单位进行存储-转发的一种数据交换方式
		2.分组交换：1.采用路由技术的分组（其中的分组称为数据包，每个数据包加上源地址，目的地址，报文号，分组号） 2.不依靠路由而是在数据分组前先在源节点和目的节点间的所有路由器间建立一条虚拟的通信通道，再把数据分组通过虚拟通道转发到目的节点，虚电路，每个分组不必加上报文号和分组号
19.IP协议：
	1.寻址
	2.数据报封装：从上到下，加上头部（和尾部）
	3.分段和重组
20.数据包格式：IP包头（版本、头部长度、区分服务字段）和数据
21.ARP协议：IP地址解析成mac地址
	1.ARP是一个独立的三层协议，所以ARP报文在向数据链路层传输时不需要经过IP协议的封装，而是直接生成自己的报文，到数据链路层后再由对应的数据链路层协议进行封装（ARP帧）
	2.ARP映射，无论是主机还是交换机都会有一个用来缓存同一网段设备IP地址和MAC地址的ARP映射表，用于数据帧的转发。设备通过ARP解析到目的MAC地址后，将会在自己的ARP映射表中增加IP地址到MAC地址的映射表项
	3.ARP表项：动态/静态
	4.工作原理
		1.同一网段：查找ARP映射表-找到则发送，找不到则缓存，之后广播请求报文（包含目的和源的ip与mac地址），目的主机收到并将源的ip与mac地址写入映射表，再给源主机发送包含自己ip和mac地址的应答报文
		2.不同网段：主机A找网关（带网关ip地址），找到后发送报文（填上网关的mac地址），网关找主机B，找到后发送报文（填上主机B的mac地址）
22.ICMP协议（控制报文协议）：
	1.用于在IP主机、路由器之间传递控制消息，控制消息是网络通不通、主机是否可达、路由是否可用等网络本身的消息
	2.ICMP协议依靠IP协议来完成任务，常见的命令程序有ping和tracert这样的诊断程序
23.路由和路由算法：
	1.路由的实现是依靠路由器或三层交换机中的路由表进行的，路由又分为静态路由和动态路由
	2.静态路由：（1）手动配置（包含目的节点或目的网络的IP地址，及数据包从当前路由器开始路由的下一跳所对应的接口或IP地址 （2）路由路径固定不变 （3）不可通告性，当一个路由器上配置了某条静态路由时，它不会被通告网络中相连的其他路由器 （4）单向性，它仅为数据提供沿着下一跳的方向进行路由，不提供反向路由，想要双向通信，必须同时配置回程路由 （5）接力性，如果某条静态路由中间经过的跳数大于1，则必须在除最后一个路由器外的其他路由器上依次配置到达相同目的节点或目的网络的静态路由 （6）优先级较高 在所有同目的地址的路由中，静态路由的优先级是除“直连路由”外最高的（优于默认路由）。（7）适用小型网络
	3.动态路由：（1）自动生成，在网络中某条路由所包括的路由器同时启用了某种动态路由协议，通告了各自所直接连接的网络后，则这些路由器会自动生成这些路由器直接连接的网络间的路由表项。（2）自动调整 （3）自动通告 （4）自动生成双向路由 （5）仅可生成网络间的路由表项（不能生成具体主机）（6）不同动态路由不兼容
24.路由算法：
	1.非自适应路由算法
		（1）静态路由
		（2）扩散法：一个路由接口收到报文分组后，向所有接口复制扩散
		（3）随机走动法：随机选择一个接口转发
		（4）最短路径法：只考虑网络拓扑结构来寻找最短路径
		（5）基于流量的路由算法：考虑拓扑、网络流量、负载对路由的影响来选择路由
	2.自适应路由算法：
		（1）总体式路由算法（每个路由器拥有网络中某个区域或整个网络的其他路由器的所有信息及流量状况）
			1.链路状态路由算法：
				不仅根据路由器跳数，还根据路径上的链路质量
			2.分级路由算法：
				路由器被分成很多组，称为区域，每个路由器只有区域内路由器的信息
		（2）分散式路由算法（每个路由器只有相邻路由器的信息）
			1.距离矢量路由算法:
				距离矢量是对应路由条目中源和目的站点间的距离（跳数），从本节点起，每经过一个路由器就加一跳，如RIP
25.路由表基础：
	1.静态路由
	2.动态路由
	3.直连路由
26.拥塞控制：确保通信子网能够承担用户提交的通信量
     流量控制：解决快速发送端与慢速接收端的问题
27.产生拥塞的原因：
	1.节点的缓存区容量太小
	2.输出链路的信道带宽不够
	3.处理机的速度不够
28.网络拥塞控制：
	1.缓冲区预分配法（虚电路选择其他路径）
	2.分组丢弃法：不必预先为数据包预留缓冲区，而是在路由器的缓冲区已被占满时，只需将后面到来的数据包丢弃
	3.定额控制法
29.ip地址分为网络id和主机id，子网掩码的网络id全为1，1的长度等于网络id的长度
30.ip地址分类：a类、b类、c类、d类和e类
31.VLSM，可变长子网掩码，使子网掩码位数可以不已字节为单位
32.网络地址：用来标识一个有类或无类网络的地址，是对应网络或子网的第一个地址，即主机ID全为0的地址
    广播地址：最后一个地址，即主机id全为1的地址
    主机地址
33.单播：一台源ip主机仅与一台目的IP主机进行通信的方式
     组播：一台源ip主机同时与网络中多台ip主机进行通信的方式
     广播：一台源ip主机同时与本地网络或子网中所有其他节点进行通信的方式
34.广播地址：
	1.网络广播地址
	2.子网广播地址：仅针对特定子网
	3.全子网定向广播
	4.有限广播
35.几种特殊的IPv4地址：
	1.私网IP地址
	2.169开头的IPv4地址：如果你采用的是自动IP地址分配方式，但本地网络又没有部署用于自动IP地址分配的DHCP服务器，则主机会自动获得一个以169开头的IP地址
	3.127.0.0.1地址：环回地址，主要用于网络软件测试以及本地机进程间通信，在IP网络中测试主机TCP/IP协议是否工作正常
	4.0.0.0.0地址：在配置默认路由中使用0.0.0.0这个ipv4地址，它代表所有不清楚路由目的主机和目的网络，在网络配置中，0.0.0.0又代表整个网络，即网络中的所有工作
36.IPv4子网划分与聚合：
	子网划分的基本思想：把原来标准网络IPv4地址中的网络id部分向主机id部分借位，把一部分原来属于主机id的位变成网络id的一部分，原来网络id+子网id=新网络id，子网id长度决定了可以划分子网的数量，因为每一位有0或1两种，因此可以划分的子网数为2*n个
27.全0子网与全1子网：
	没有CIDR时被禁用，因为重叠，使用CIDR通过地址前缀形式就可以直到发向哪个网络
28.CIDR（无类别域间路由）：可以把一些连续的多个小子网路由汇总成一条大网络的路由，通过大网络的路由条目可以实现子网的路由，最终减少路由表的条目和提高路由性能的目的
29.NAT（网络地址转换）：允许组织内部网络使用非全局可路由IP地址的用户通过地址转换成全局可路由的IP地址来访问Internet。
30.nat服务运行在位于内、外网之间的路由设备上的，在内、外网用户之间通信时对数据包中的地址进行转换。
31.nat服务工作在路由器上，通常用于连接两个网络，通过把内部网络中的多个私网转换成合法的一个或多个公网地址，让私网用户连接到internet，或允许internet访问私网设备
32.nat应用的三种情形：
	1.无足够的公网ip地址可用时，当想要连接到internet，但网络中并不是每个用户都有全局、合法的公网ip地址时，就可以用nat来解决，在内部网络和外部网络的边界路由器处配置nat，在内部网连上外部网前转换成内部全局地址
	2.重构网络ip地址部署
	3.实现简单的TCP负载均衡，你可以使用nat把多个相同服务器的私网ip地址映射到一个全局公网ipv4地址，实现负载均衡
33.nat术语：
	1.内部网络（通常为一个局域网）
	2.外部网络（例如internet）
	3.本地地址
	4.全局地址
34.在私有网络中的计算机是使用内部本地地址进行通信的，当它们需要与外部网络进行通信时，就需要为它们配置内部全局地址。
35.nat进行地址转换的过程就是本地地址与全局地址之间的转换，当数据包还在内部网络位置时有一个作为源地址的内部本地地址和一个作为目的地址的外部本地地址，此数据包首先发往路由器连接内部网络的接口，当数据包被转发到外部网络时，数据包的源地址就会转变为内部全局地址，目的地址被转变为外部全局地址，也就是数据包的所有源和目的地址全部由本地地址转换为全局地址。这个过程是通过nat中的本地地址和全局地址的映射条目来实现的，外部到内部类似
36.nat类型：
	1.静态nat：非注册IP地址一对一映射到公网注册IP地址
	2.动态nat：一个非注册IP地址动态地映射到一个注册IP地址池中的一个地址
	3.重载nat：动态nat的一种形式，它通过与IP地址的不同端口组合，把多个非注册IP地址映射到一个注册IP地址(只是端口不同)，PAT
	4.重叠nat：当内部网络中用的IP地址是外部网络注册的IP地址时，路由器需要维护一张查询表，以便截取来自内部网络的数据包，并用外部网络中没有使用过的注册IP地址进行替换
37.rip路由协议：
	1.“跳数”
	2. 度量更新原则：每个rip路由器会把自己的路由表发给相邻的rip路由器，以便进行路由表更新：
		1.路由表项每经过一次邻居之间的传递，其度量值+1
		2.收到新路由表项时，在路由表中添加新的路由表项，其度量是在接受的路由表项基础上+1，同时在新添加的路由表项上标注其下一跳地址就是邻居路由器的接口
		3.收到原有路由表项的路由更新时，先对更新的路由表项的度量+1，然后与对应的路由表项中原度量进行比较，仅接受度量小或相等的更新
	3.更新机制：
		1.触发更新
		2.定期更新
			1.如果没有，直接添加
			2.如果有相同网络且来源端口相同，无条件更新
			3.如果有相同网络但来源不同，比较度量值
			4.如果有相同网络度量值相同，保留原来路由表项
	4.路由收敛机制
		1.最大跳数限制
		2.水平分割法：保证单向
		3.毒性逆转水平分割：允许回传，但这些回传路径的跳数设为16
		4.保持定时器法：设置路由信息被抑制的时间，默认为180s，当路由器接受到一个不可达的路由更新时，路由器会把这条路由更新为无效状态，不再接受更新信息
38.OSPF路由协议：
	1.采用链路状态路由算法
	2.可划分不同区域
	3.有不同路由器角色
	4.收敛快：同步各路由器对网络状态的认识（分布式数据库），然后通过dijsktra算法计算出最短路径
39.OSPF特点：
	1.适应范围广
	2.快速收敛
	3.无自环
	4.支持区域划分
	5.支持等价路由
	6.支持路由分级划分
	7.支持验证
	8.支持组播发送
40.OSPF的AS（自治系统）与Area（区域）：
	1.AS是一组使用相同路由协议交换路由信息的路由器，又称路由域，它可以是一个路由器直接连接到一个LAN上，然后连到Internet，也可以是一个企业骨干网互连的多个局域网。同一个AS中的所有路由器必须相互连接，运行相同的路由协议，同时分配同一个AS号
	2.在网络中，只有同一个AS中的路由器才会相互交换链路状态信息；在同一个AS中，所有路由器都维护一个相同的数据库。
	3.而且OSPF可以将一个AS分割成多个小的区域，便于网络的拓展，而且每个OSPF路由器只在区域内部学习链路状态信息
	4.默认情况下，在AS中的每个OSPF路由器必须在数据库中保持其他每个路由器的LSA（链路状态通告），这样就导致数据库太大
41.Area:
	1.为了减少LSDB的大小，降低SPF运算的系统资源开销，减少路由表项数，OSPF允许AS被划分为多个连续网络群组，这就是区域，一个area是as的一部分，各区域通过路由器独立于计算网络拓扑结构，每一个区域都有着该区域独立的网络拓扑数据库及网络拓扑图。为了使每个路由器的LSDB最小，一个区域中的网络LSA报文只向区域内的路由器泛洪。
42.OSPF：
	1.内部路由器-IR
	2.边界路由器（area边界）-ABR
	3.as边界路由器-ASBR
	4.骨干路由器-BR
43.传输层：把数据传送到目的主机的应用进程，即端到端服务
	1.端到端指网络通信的双方不是在同一链路，不是点对点的
	2.端到端屏蔽了核心网络结构和各种子网间的差异，这也是对等通信原理
44.端到端：
	优点：1.链路建立后源端知道接收设备一定能收到，而且经过中间交换设备时不需要存储转发，无需多条链路
	缺点：1.直到目的端收到数据为止，源端的设备一直要参与传输
	          2.如果接收设备关机或故障，那么端到端不可能传输
45.点对点：
	优点：1.源端设备送出数据后，它的任务已经完成，不需要参与整个传输过程
	缺点：1.源端发出数据后，不知道目的端能否收到或何时收到数据
46.传输层服务：
	1.有连接：提供传输服务前需要建立专门的传输连接，而且这条连接是可管理的，在通信结束后拆除
	2.无连接
47.服务类型：
	1.传输连接：传输层为它的上层发出的每个应用进程在网络层提供的服务的基础上建立一个相应的逻辑
	2.数据传输：在所建立的传输连接基础上为用户提供比网络层更有保障、更具针对性，并且由用户自己进行拥塞控制的数据传输
48.服务类型：（OSI）
	1.A类：最低的差错率，虚电路网络
	2.B类：较低的差错率，广域网网络
	3.C类：较高的差错率
49.传输层协议类别：
	1.TP0
	2.TP1
	3.TP2
	4.TP3
	5.TP4
50.TSAP:传输服务访问点，传输层必须把一个用户进程和其他的用户进程区分开，这个工作是由传输层地址来完成的。同一时间、同一对网络实体间的用户应用进程可能有多个，不能仅靠网络实体地址来标注通信双方，必须借助传输层地址进行标识，TSAP相当于传输层的地址
51.传输层地址=网络地址+端口
52.在总共65535个端口中，前1024个端口是常规端口，代表了特定的应用层服务，而且同一时间、同一主机不能有两个应用进程使用相同的端口号
53.TPDU：传输层数据单元
54.常用TPDU类型：
	1.CR：连接请求，向对端发送的面向连接的传输连接请求TPDU
	2.CC：连接确认，向连接请求者发送的面向连接的传输连接确认TPDU
	3.DR：断开连接请求：向对端发送的断开连接请求的TPDU
	4.DC：断开连接确认：向连接请求者发送的断开连接确认的TPDU
	5.DT：数据：向对端发送的真正用户数据的TPDU
	6.AK：数据确认：向数据发送者发送的用户数据确认的TPDU
	7.ED：加速数据：向对端发送的加速数据的TPDU
	8.EA：加速数据确认
	9.RJ：向连接请求者发送的拒绝请求的TPDU
	10.ER：向数据发送者发送的数据错误的TPDU
55.传输层建立阶段：CR、CC
数据传输阶段：DT、AK、ED、EA
连接释放阶段：DR、DC
56.传输服务原语：
	一个简单的传输服务模型：
		1.服务器listen
		2.客户connect 发送CR
		3.服务器check 发送CC
		4.客户端通知应用进程，发送数据，服务器接收数据并返回确认
		5.释放连接：对称释放（双方都必须调用disconnect原语）和非对称释放（任何一方调用disconnect原语就可以释放连接）
57.传输服务具体功能：
	1.进程服务器：
		1.用户向服务器发送一个传输连接请求，如果没有专门服务器，就会得到一个与进程服务器之间的连接
		2.进程服务器接到了用户的传输连接请求后，装载对应的用户进程，启动与该请求对应的服务
		3.进程服务器为该用户进程分配了一个临时的TSAP地址，这样用户与对应的服务器初始连接
		4.对应的服务器执行用户请求的工作，而进程服务器则继续监听新的请求
	2.名称服务器：在一些特殊情况下还是有些服务的运行必须独立于进程服务器，知名服务器也并没有实际被提供仍需要被集中管理
		1.DNS服务器总是监听一个特定的知名服务的端口（常规端口），在这种方案中，为了找到与给定服务名字相对应的TSAP地址，用户需要与名称服务器建立连接，然后用户发送一个消息指定想要的服务，名称服务器返回相应的TSAP地址，随后用户释放连接，建立一个新的连接
58.传输层功能：
	1.传输连接建立
	2.数据传输
	3.传输连接释放
	4.流量控制
	5.多路复用
	6.崩溃恢复
59.TCP/IP：
	1.面向连接
	2.单播
	3.可靠交付
	4.传输单位为数据段
	5.仅一种TPDU
	6.全双工传输
	7.字节流
	8.数据段可变
60.在TCP/IP网络中，区分不同应用程序进程间的网络通信和连接时主要有ip、协议、端口，socket可以看成是在两个网络应用程序进行通信连接时的一个端点，连接两个网络程序，socket属于应用层，但调用了传输层的接口
61.在TCP/IP通信中，应用程序把数据传送给套接字，然后由套接字通过传输层向下提交给网络驱动程序并向网络上发送出去，计算机从网络上收到与该套接字绑定的IP地址和端口号相关的数据后，由网络驱动程序通过传输层向上提交给应用层的套接字，然后应用程序从套接字提取接收的数据
62.套接字和端口与IP地址之间是多对一的关系
63.TCP socket原语：（前4个服务器按照顺序执行）
	1.socket：创建一个新的通信端点
	2.bind：将一个本地地址关联到套接字上
	3.listen：通告愿意接受连接，并给出队列大小
	4.accept：阻塞调用方，直到有人企图进行连接
	5.connect：主动尝试一个连接
	6.send：在指定的连接上发送数据
	7.recv：从指定的连接上接受数据
	8.close：释放指定的连接
64.服务器初始化：socket->bind->listen->accept
     客户端初始化：socket
     客户端请求连接并发送数据或收到数据：connect->send->recv
     服务器接发数据：recv->send
     服务器关闭：close
     客户端关闭：close
65.接口是物理的，端口是抽象的软件结构，包括数据结构和I/O缓冲区
66.TCP端口：
	1.保留端口
	2.动态分配端口
	3.注册端口
67.TCP连接的状态转移：
	1.一开始，服务器应用层首先调用listen原语从closed状态进入listen状态，等待客户端的连接
	2.当客户端的一个应用程序调用connect原语后，本地的TCP实体为其创建一个连接记录并标记为SYN SENT状态，然后给服务器发送一个SYN数据段（字段置1），第一次握手
	3.服务器在收到一个客户端的SYN数据段后，其TCP实体向客户端发送ACK数据段（置1），同时发送一个SYN数据段（SYN字段置1，表示接受同步请求，确认号为i+1），进入SYN RCVD状态，第二次握手
	4.如果服务器不想建立传输连接，那么由其应用层调用closed原语，向客户端发送一个FIN数据段（fin置1），然后进入fin wait 1状态，等待客户端确认。当客户端收到fin数据段后，向服务器发送一个ack确认数据段进入closing状态，表示双方同时尝试关闭传输连接，等待对方确认，在服务器收到客户端发来的ack数据时进入timed wait状态，在超时后双方关闭连接
	5.客户端在收到服务器发来的syn和ack数据段后，其tcp实体给服务端发送一个ack数据段（序号为i+1，确认号为j+1），并进入established状态，这是第三次握手
	6.服务器在收到来自客户端的ack确认数据段后，完成整个TCP传输连接的全部三次握手，进入established状态
关闭连接的状态转移（假设客户端发起关闭）：
	1.客户端调用close原语，本地tcp实体发送一个fin数据段（置1），并等待服务器确认，进入fin wait 1状态
	2.如果在fin wait 1状态收到服务器的fin和ack字段后向服务器发送一个ack数据，直接进入timed wait状态，超时后双方关闭连接
	3.服务器收到来自客户端的fin数据段后，它给客户端返回一个ack字段（置1），确认号为m+1，进入close wait状态，TCP服务器通知高层的应用进程，客户端向服务器的方向就释放了，进入半关闭状态，但此时服务器仍可以向客户端发送数据，客户端也可以接收来自服务器的数据，持续一段时间直到服务器全部发送完数据
	4.客户端收到来自服务器的ack确认字段后，进入fin wait 2状态，此时连接在一个方向上断开，但仍可以接受服务端发来的数据段
	5.服务器发送完全部数据后，也由应用层调用close原语，请求关闭另一个方向的连接，其本地tcp实体向客户端发送一个确认数据段（fin字段置1，ack字段置1，ack=m+1），并进入last ack状态，等待最后一个ack确认数据段
	6.客户端收到来自服务器的确认数据段（fin+ack）后，向服务器发送最后一个ack确认字段，进入timed wait状态，此时双方连接均已断开，但tcp实体仍要等待一个2倍数据段MSL，以确保该连接的所有分组全部消失，防止出现确认丢失的情况，当定时器超时后，进入closed状态
	7.服务器收到ack后，释放该连接，进入closed状态
68.连接可以由任一方或双方发起，一旦连接建立，数据就可以双向对等地流动，没有主从关系，三次握手是连接两端正确同步的充分必要条件，因为TCP建立在不可靠的分组传输服务之上，报文可能丢失、延迟等，因此协议必须使用超时和重传机制
69.如果重传的连接请求和原先的连接请求在连接正在建立时到达，或者当一个连接已经建立到达、使用或结束后某个延迟的连接请求才到达，就会出现问题，三次握手解决这个问题
70.双方同时主动连接的TCP 连接建立：
	当出现同时发出连接请求时，两端几乎同时发送一个SYN字段置1的数据段，并进入SYN_SENT状态，当每一段收到syn数据段时，状态变为SYN_RCVD，同时它们在发送SYN字段置1，ack字段置1的数据段，对收到的syn数据段进行确认，当双方都进入收到对方的syn和ack时都进入established状态，建立连接。
双方同时释放连接：
	同时发送fin数据段执行关闭，同时从established转变为fin wait 1状态，任意一段收到对端传来的fin数据段后，其状态均由fin wait 1转为closing，并发送最后的ack，当收到最后的ack时，状态变为time_wait，等待时间后退出
71.TCP可靠传输：
	1.字节编号机制
	2.数据段确认机制
	3.超时重传机制
	4.选择性确认，重传缺少部分的数据
72.TCP确认机制的特性
	1.TCP可一次连续发送多个数据段
	2.仅对连续接收的数据段进行确认，仅代表对端已正确接收的连续数据端，如接收到了1，101，201，501（100字节一个单位），返回的是301
	3.不连续序号的数据将先缓存在接收窗口，若连续就删除
73.TCP超时重传机制：RTT的确定
74.TCP选择重传机制：如接收端收到1、101、201、401、501序号的数据段，301没有收到，如果301的RTT超时了，则发送端重传这个数据，但重传的301到达对端也需要时间，在301重传过程中，401、501可能也超时，这时又对401和501重传，显然没必要
	1.引入SACK机制，在TCP数据端格式的头部“可选项”字段中添加一个代表支持SACK的字段，在这个字段中，包含本段要告诉对端已接收到的不连续数据段，例如接收端在发送确认号为301的确认数据段时，在SACK选项中标记401和501这两个不连续数据段
74.TCP流量控制：
	流量控制：通信双方的数据发送和接收速率匹配，链路两端的点对点
	拥塞控制：网络中各段链路的带宽和中间设备数据处理能力考虑，端到端
	1.滑动窗口机制
75.基于传输效率的考虑：
	1.nagle算法
	2.clark算法
76.TCP拥塞控制：
	1.慢启动
	2.拥塞避免
	3.快速重传/快速恢复
77.UDP：
	1.无连接性
	2.不可靠性
	3.以报文为边界
	4.无流量控制和拥塞控制功能
	5.支持各种交互通信方式
78.应用层服务器方案：
	1.迭代服务器：请求队列
	2.并发服务器：一个守护进程，来一个请求就为之创建一个子进程
79.万维网的标识：
	1.URL
	2.URI
	3.URN
80.http特性：
	1.C/S
	2.仅需要TCP连接
	3.高可靠性
	4.无状态
	5.简单快速
81.DHCP：
	1.简单的IP地址自动分配
	2.通过IP地址与mac地址绑定功能实现静态ip地址的分配
	3.配置客户端的dns服务器、wins服务器和默认网关
	4.利用ip地址排除功能，使已静态分配给其他主机的IP地址不再分配给DHCP客户端
	5.通过DHCP中继功能，一个DHCP可以为多个网段中的DHCP客户端分配ip地址
82.邮件服务：
	1.SMTP发送，POP3接收


			
				


	
	